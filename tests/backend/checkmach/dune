(include dune.inc)

(rule (with-stdout-to dune.inc.gen (run ./gen/gen_dune.exe)))

(rule
 (alias  runtest)
 (action (diff dune.inc dune.inc.gen)))

(rule
 (alias  runtest)
 (action (copy fail25.ml fail26.ml)))

(rule
 (alias  runtest)
 (action (copy test_all_opt.ml test_all_opt2.ml)))

(rule
 (alias  runtest)
 (action (copy test_all_opt.ml test_all_opt3.ml)))

;; Zero-alloc in signatures checking.  Somewhat complicated dune rules to arrange
;; for separate compilation and delete executable artifacts so we're sure we're
;; only using cmi information.
(rule
  (alias runtest)
  (enabled_if (= %{context_name} "main"))
  (deps test_signatures_separate_a.ml test_signatures_separate_b.ml)
  (targets test_signatures_separate_a.cmi
           test_signatures_separate.output.corrected)
  (action
    (progn
      (run %{bin:ocamlopt.opt} test_signatures_separate_a.ml -c -opaque
              -warn-error -a -zero-alloc-check default)
      (bash "rm test_signatures_separate_a.cmx test_signatures_separate_a.o")
      (with-outputs-to test_signatures_separate.output.corrected
        (pipe-outputs
          (with-accepted-exit-codes 2
             (run %{bin:ocamlopt.opt} test_signatures_separate_b.ml -c
                     -color never -zero-alloc-check default))
          (run "./filter.sh"))
      )
    )
  )
)

(rule
  (alias runtest)
  (enabled_if (= %{context_name} "main"))
  (deps test_signatures_separate_b.ml test_signatures_separate_a.cmi)
  (targets test_signatures_separate.opt.output.corrected)
  (action
    (progn
      (with-outputs-to test_signatures_separate.opt.output.corrected
        (pipe-outputs
          (with-accepted-exit-codes 2
             (run %{bin:ocamlopt.opt} test_signatures_separate_b.ml -c
                     -color never -zero-alloc-check all))
          (run "./filter.sh"))
      )
    )
  )
)

(rule
  (alias runtest)
  (enabled_if (= %{context_name} "main"))
  (deps test_signatures_separate.output.corrected
        test_signatures_separate.output)
  (action
    (diff test_signatures_separate.output
          test_signatures_separate.output.corrected))
)

(rule
  (alias runtest)
  (enabled_if (= %{context_name} "main"))
  (deps test_signatures_separate.opt.output.corrected
        test_signatures_separate.opt.output)
  (action
    (diff test_signatures_separate.opt.output
          test_signatures_separate.opt.output.corrected))
)
